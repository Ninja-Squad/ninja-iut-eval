apply plugin : 'java'
apply plugin : 'war'
apply plugin : 'eclipse-wtp'
apply plugin : 'checkstyle'
apply plugin : 'pmd'
apply plugin : 'findbugs'
apply plugin : 'tomcat'

compileJava.options.encoding = 'ISO-8859-1'

repositories {
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'org.springframework:spring-webmvc:3.2.2.RELEASE'
    compile 'org.springframework:spring-orm:3.2.2.RELEASE'
    compile 'org.hibernate:hibernate-entitymanager:4.1.10.Final'
    compile('javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1') {
        transitive = false
    }
    compile('org.glassfish.web:javax.servlet.jsp.jstl:1.2.1') {
        transitive = false
    }
	compile 'joda-time:joda-time:2.2'
    compile 'org.hsqldb:hsqldb:2.2.9'
    
    testCompile 'junit:junit:4.+'
    testCompile 'org.mockito:mockito-all:1.9.0'

    def tomcatVersion = '7.0.40'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.4'
}

checkstyle {
    sourceSets = [sourceSets.main]
}

checkstyleMain << {
    ant.xslt(in: reports.xml.destination,
            style: new File(configFile.parent, 'checkstyle-noframes-sorted.xsl'),
            out: new File(reports.xml.destination.parent, 'main.html'))
}

pmd {
    sourceSets = [sourceSets.main]
}

pmdMain {
    ignoreFailures = true
    ruleSetFiles = files('config/pmd/ruleSet.xml')
}

findbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
}

findbugsMain {
    reports {
        xml {
            enabled = false
        }
        html {
            enabled = true
        }
    }
}